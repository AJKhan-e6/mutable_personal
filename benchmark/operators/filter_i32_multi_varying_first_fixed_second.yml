description: |
    Range filter on attribute of type INT(4) with varying selectivity of the first predicate and fixed selectivity of
    the second predicate.
suite: operators
benchmark: 'filter-multiple'
readonly: yes
pattern: '^Execute query:.*'
configurations:
    Interpreter:                 --backend Interpreter
    'WebAssembly (RowStore)':    --backend WasmV8 --store RowStore
    'WebAssembly (ColumnStore)': --backend WasmV8 --store ColumnStore
label: 'Selectivity'
tables: [ 'Attribute_i32' ]
cases:
    0.0: SELECT 1 FROM Attribute_i32 WHERE val < -2147483647 AND val <           0;
    0.1: SELECT 1 FROM Attribute_i32 WHERE val < -1717986918 AND val > -2147483647;
    0.2: SELECT 1 FROM Attribute_i32 WHERE val < -1288490188 AND val > -1717986918;
    0.3: SELECT 1 FROM Attribute_i32 WHERE val <  -858993459 AND val > -1288490188;
    0.4: SELECT 1 FROM Attribute_i32 WHERE val <  -429496729 AND val >  -858993459;
    0.5: SELECT 1 FROM Attribute_i32 WHERE val <           0 AND val >  -429496729;
    0.6: SELECT 1 FROM Attribute_i32 WHERE val <   429496729 AND val >           0;
    0.7: SELECT 1 FROM Attribute_i32 WHERE val <   858993459 AND val >   429496729;
    0.8: SELECT 1 FROM Attribute_i32 WHERE val <  1288490188 AND val >   858993459;
    0.9: SELECT 1 FROM Attribute_i32 WHERE val <  1717986918 AND val >  1288490188;
    1.0: SELECT 1 FROM Attribute_i32 WHERE val <  2147483647 AND val >  1717986918;
compare_to:
    'DuckDB':     'benchmark/operators/filter_i32_multi_varying_first_fixed_second_duckdb.sh'
    # 'PostgreSQL': 'benchmark/operators/filter_i32_multi_varying_first_fixed_second_postgresql.sh'
    # 'HyPer':      'benchmark/operators/filter_i32_multi_varying_first_fixed_second_hyper.py'
