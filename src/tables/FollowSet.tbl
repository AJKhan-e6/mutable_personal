/* vim: set filetype=cpp: */

M_FOLLOW( COMMAND, ({ TK_EOF }))
M_FOLLOW( STATEMENT, ({ TK_EOF }))
M_FOLLOW( CREATE_DATABASE_STATEMENT, ({ TK_SEMICOL, TK_EOF }))
M_FOLLOW( USE_DATABASE_STATEMENT, ({ TK_SEMICOL, TK_EOF }))
M_FOLLOW( CREATE_TABLE_STATEMENT, ({ TK_SEMICOL, TK_EOF }))
M_FOLLOW( CONSTRAINT, ({ TK_COMMA, TK_EOF, TK_Not, TK_Primary, TK_Unique, TK_RPAR, TK_Check, TK_References }))
M_FOLLOW( SELECT_STATEMENT, ({ TK_RPAR, TK_SEMICOL, TK_EOF }))
M_FOLLOW( INSERT_STATEMENT, ({ TK_SEMICOL, TK_EOF }))
M_FOLLOW( TUPLE, ({ TK_COMMA, TK_SEMICOL, TK_EOF }))
M_FOLLOW( UPDATE_STATEMENT, ({ TK_SEMICOL, TK_EOF }))
M_FOLLOW( DELETE_STATEMENT, ({ TK_SEMICOL, TK_EOF }))
M_FOLLOW( IMPORT_STATEMENT, ({ TK_SEMICOL, TK_EOF }))
M_FOLLOW( SELECT_CLAUSE, ({ TK_From, TK_Where, TK_Group, TK_Order, TK_Limit, TK_Having, TK_EOF, TK_RPAR, TK_SEMICOL }))
M_FOLLOW( TABLE_OR_SELECT_STATEMENT, ({ TK_COMMA, TK_Where, TK_Group, TK_Order, TK_Limit, TK_Having, TK_EOF, TK_RPAR, TK_SEMICOL }))
M_FOLLOW( FROM_CLAUSE, ({ TK_Where, TK_Limit, TK_Having, TK_Order, TK_EOF, TK_Group, TK_RPAR, TK_SEMICOL }))
M_FOLLOW( WHERE_CLAUSE, ({ TK_Limit, TK_Having, TK_Order, TK_EOF, TK_Group, TK_RPAR, TK_SEMICOL }))
M_FOLLOW( GROUP_BY_CLAUSE, ({ TK_Limit, TK_Having, TK_Order, TK_EOF, TK_RPAR, TK_SEMICOL }))
M_FOLLOW( HAVING_CLAUSE, ({ TK_Limit, TK_EOF, TK_Order, TK_RPAR, TK_SEMICOL }))
M_FOLLOW( ORDER_BY_CLAUSE, ({ TK_RPAR, TK_SEMICOL, TK_Limit, TK_EOF }))
M_FOLLOW( LIMIT_CLAUSE, ({ TK_RPAR, TK_SEMICOL, TK_EOF }))
M_FOLLOW( UPDATE_CLAUSE, ({ TK_SEMICOL, TK_Where, TK_EOF }))
M_FOLLOW( DESIGNATOR, ({ TK_From, TK_LESS, TK_MINUS, TK_LESS_EQUAL, TK_Or, TK_SLASH, TK_BANG_EQUAL, TK_LPAR, TK_Having, TK_PERCENT, TK_Limit, TK_EOF, TK_RPAR, TK_GREATER, TK_And, TK_IDENTIFIER, TK_ASTERISK, TK_COMMA, TK_Where, TK_Group, TK_As, TK_Order, TK_PLUS, TK_EQUAL, TK_Descending, TK_SEMICOL, TK_Ascending, TK_GREATER_EQUAL }))
M_FOLLOW( PRIMARY_EXPRESSION, ({ TK_From, TK_LESS, TK_MINUS, TK_LESS_EQUAL, TK_Or, TK_SLASH, TK_BANG_EQUAL, TK_LPAR, TK_Having, TK_PERCENT, TK_Limit, TK_EOF, TK_RPAR, TK_GREATER, TK_And, TK_IDENTIFIER, TK_ASTERISK, TK_COMMA, TK_Where, TK_Group, TK_As, TK_Order, TK_PLUS, TK_EQUAL, TK_Descending, TK_SEMICOL, TK_Ascending, TK_GREATER_EQUAL }))
M_FOLLOW( POSTFIX_EXPRESSION, ({ TK_From, TK_LESS, TK_MINUS, TK_LESS_EQUAL, TK_Or, TK_SLASH, TK_BANG_EQUAL, TK_LPAR, TK_Having, TK_PERCENT, TK_Limit, TK_EOF, TK_RPAR, TK_GREATER, TK_And, TK_IDENTIFIER, TK_ASTERISK, TK_COMMA, TK_Where, TK_Group, TK_As, TK_Order, TK_PLUS, TK_EQUAL, TK_Descending, TK_SEMICOL, TK_Ascending, TK_GREATER_EQUAL }))
M_FOLLOW( UNARY_EXPRESSION, ({ TK_From, TK_LESS, TK_MINUS, TK_LESS_EQUAL, TK_Or, TK_SLASH, TK_BANG_EQUAL, TK_Limit, TK_Having, TK_PERCENT, TK_EOF, TK_RPAR, TK_GREATER, TK_And, TK_IDENTIFIER, TK_ASTERISK, TK_COMMA, TK_Where, TK_Group, TK_As, TK_Order, TK_PLUS, TK_EQUAL, TK_Descending, TK_SEMICOL, TK_Ascending, TK_GREATER_EQUAL }))
M_FOLLOW( MULTIPLICATIVE_EXPRESSION, ({ TK_From, TK_LESS, TK_MINUS, TK_LESS_EQUAL, TK_Or, TK_SLASH, TK_BANG_EQUAL, TK_Limit, TK_Having, TK_PERCENT, TK_EOF, TK_RPAR, TK_GREATER, TK_And, TK_IDENTIFIER, TK_ASTERISK, TK_COMMA, TK_Where, TK_Group, TK_As, TK_Order, TK_PLUS, TK_EQUAL, TK_Descending, TK_SEMICOL, TK_Ascending, TK_GREATER_EQUAL }))
M_FOLLOW( ADDITIVE_EXPRESSION, ({ TK_From, TK_LESS, TK_MINUS, TK_LESS_EQUAL, TK_Or, TK_BANG_EQUAL, TK_Limit, TK_Having, TK_EOF, TK_RPAR, TK_GREATER, TK_And, TK_IDENTIFIER, TK_COMMA, TK_Where, TK_Group, TK_As, TK_Order, TK_PLUS, TK_EQUAL, TK_Descending, TK_SEMICOL, TK_Ascending, TK_GREATER_EQUAL }))
M_FOLLOW( COMPARATIVE_EXPRESSION, ({ TK_COMMA, TK_From, TK_Where, TK_Group, TK_As, TK_Order, TK_Or, TK_EOF, TK_Having, TK_Limit, TK_Descending, TK_RPAR, TK_IDENTIFIER, TK_And, TK_SEMICOL, TK_Ascending }))
M_FOLLOW( COMPARISON_OPERATOR, ({ TK_DATE_TIME, TK_False, TK_MINUS, TK_STRING_LITERAL, TK_HEX_FLOAT, TK_PLUS, TK_True, TK_DATE, TK_HEX_INT, TK_LPAR, TK_EOF, TK_OCT_INT, TK_DEC_FLOAT, TK_IDENTIFIER, TK_DEC_INT, TK_TILDE }))
M_FOLLOW( LOGICAL_NOT_EXPRESSION, ({ TK_COMMA, TK_From, TK_Where, TK_Group, TK_As, TK_Order, TK_Or, TK_EOF, TK_Having, TK_Limit, TK_Descending, TK_RPAR, TK_IDENTIFIER, TK_And, TK_SEMICOL, TK_Ascending }))
M_FOLLOW( LOGICAL_AND_EXPRESSION, ({ TK_COMMA, TK_From, TK_Where, TK_Group, TK_As, TK_Order, TK_Or, TK_EOF, TK_Having, TK_Limit, TK_Descending, TK_RPAR, TK_IDENTIFIER, TK_And, TK_SEMICOL, TK_Ascending }))
M_FOLLOW( LOGICAL_OR_EXPRESSION, ({ TK_COMMA, TK_From, TK_Where, TK_Group, TK_As, TK_Order, TK_Or, TK_EOF, TK_Having, TK_Limit, TK_Descending, TK_RPAR, TK_IDENTIFIER, TK_SEMICOL, TK_Ascending }))
M_FOLLOW( EXPRESSION, ({ TK_COMMA, TK_From, TK_Where, TK_Group, TK_As, TK_Order, TK_Limit, TK_Having, TK_EOF, TK_Descending, TK_RPAR, TK_IDENTIFIER, TK_SEMICOL, TK_Ascending }))
M_FOLLOW( DATA_TYPE, ({ TK_COMMA, TK_EOF, TK_Not, TK_Primary, TK_Unique, TK_RPAR, TK_Check, TK_References }))
