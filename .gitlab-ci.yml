#-----------------------------------------------------------------------------------------------------------------------
# GENERAL
#-----------------------------------------------------------------------------------------------------------------------

# Define the stages of the pipeline.
stages:
    - check
    - build:debug
    - test
    - build:release
    - report


#-----------------------------------------------------------------------------------------------------------------------
# CHECK
#-----------------------------------------------------------------------------------------------------------------------

check:syntax:
    stage: check
    script:
        - echo ${CI_COMMIT_BEFORE_SHA} ${CI_COMMIT_SHA} ${CI_COMMIT_REF_NAME} | hooks/pre-receive


#-----------------------------------------------------------------------------------------------------------------------
# DEBUG BUILD
#-----------------------------------------------------------------------------------------------------------------------

build:debug:linux-amd64:
    stage: build:debug
    tags:
        - linux
        - amd64
    script:
        - mkdir -p build/debug
        - cd build/debug
        - CC=clang CXX=clang++ cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug ../..
        - ninja
    artifacts:
        paths:
            - "build/debug/bin/"
        expire_in: 1 day

build:debug:macos-amd64:
    stage: build:debug
    tags:
        - macos
        - amd64
    script:
        - mkdir -p build/debug
        - cd build/debug
        - CC=clang CXX=clang++ cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug ../..
        - ninja
    artifacts:
        paths:
            - "build/debug/bin/"
        expire_in: 1 day


#-----------------------------------------------------------------------------------------------------------------------
# TEST
#-----------------------------------------------------------------------------------------------------------------------

unittest:linux-amd64:
    stage: test
    tags:
        - linux
        - amd64
    needs:
        - job: "build:debug:linux-amd64"
          artifacts: true
    script: build/debug/bin/unittest \[core\]

unittest:macos-amd64:
    stage: test
    tags:
        - macos
        - amd64
    needs:
        - job: "build:debug:macos-amd64"
          artifacts: true
    script: build/debug/bin/unittest \[core\]

integrationtest:linux-amd64:
    stage: test
    tags:
        - linux
        - amd64
    needs:
        - job: "build:debug:linux-amd64"
          artifacts: true
    script:
        - pip3 install --user --upgrade colorama pyyaml yamale tqdm
        - python3 test/IntegrationTest.py --verbose --debug

integrationtest:macos-amd64:
    stage: test
    tags:
        - macos
        - amd64
    needs:
        - job: "build:debug:macos-amd64"
          artifacts: true
    script:
        - pip3 install --user --upgrade colorama pyyaml yamale tqdm
        - python3 test/IntegrationTest.py --verbose --debug


#-----------------------------------------------------------------------------------------------------------------------
# RELEASE BUILD
#-----------------------------------------------------------------------------------------------------------------------

build:release:linux-amd64:
    stage: build:release
    tags:
        - linux
        - amd64
    script:
        - mkdir -p build/release
        - cd build/release
        - CC=clang CXX=clang++ cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ../..
        - ninja
        - cd ../..
        - mkdir mutable
        - cp -R include mutable
        - find mutable/include -type f -iname '*.hpp' | xargs perl -i -pe 'BEGIN{undef $/;} s/^\#ifndef NDEBUG.*?(\#else(.*?))?\#endif/$2/smg'
        - mkdir mutable/lib
        - cp build/release/lib/libmutable.a mutable/lib
    needs:
        - job: "unittest:linux-amd64"
        - job: "integrationtest:linux-amd64"
    artifacts:
        paths:
            - "mutable"
        expire_in: 1 day
    only:
        - master
        - /release/i

build:release:macos-amd64:
    stage: build:release
    tags:
        - macos
        - amd64
    script:
        - mkdir -p build/release
        - cd build/release
        - CC=clang CXX=clang++ cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ../..
        - ninja
        - cd ../..
        - mkdir mutable
        - cp -R include mutable
        - find mutable/include -type f -iname '*.hpp' | xargs perl -i -pe 'BEGIN{undef $/;} s/^\#ifndef NDEBUG.*?(\#else(.*?))?\#endif/$2/smg'
        - mkdir mutable/lib
        - cp build/release/lib/libmutable.a mutable/lib
    needs:
        - job: "unittest:macos-amd64"
        - job: "integrationtest:macos-amd64"
    artifacts:
        paths:
            - "mutable"
        expire_in: 1 day
    only:
        - master
        - /release/i


#-----------------------------------------------------------------------------------------------------------------------
# REPORT
#-----------------------------------------------------------------------------------------------------------------------

report:doxygen:
    stage: report
    tags:
        - nginx
    script:
        - doxygen Doxyfile
        - rm -rf /srv/http/mutable/doxy
        - mkdir -p /srv/http/mutable/doxy
        - mv doxy/html/* /srv/http/mutable/doxy
    only:
        - master

report:doxygen:api:
    stage: report
    tags:
        - nginx
    script:
        - doxygen Doxyfile-api
    artifacts:
        paths:
            - "doxy-api/html"
    only:
        - master

report:coverage:
    stage: report
    tags:
        - nginx
    needs: [ "build:debug:linux-amd64" ]
    script:
        - ./coverage.sh
        - rm -rf /srv/http/mutable/coverage
        - mv build/coverage/html /srv/http/mutable/coverage
    coverage: '/branches\.\.\.: \d+\.\d+/'
    artifacts:
        paths:
            - "build/coverage/catch.xml"
        reports:
            junit: "build/coverage/catch.xml"
    only:
        - master
        - /coverage/i
